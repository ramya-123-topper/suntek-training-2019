program 1
#include<stdio.h>
int search(int ,int ,int []);
void main()
{
int i,n,count,t=0,a[100],c;
printf("enter n");
scanf("%d",&n);
printf("enter elements");
for(i=0;i<n;i++)
scanf("%d",&a[i]);
printf("enter count");
scanf("%d",&count);
//c=sizeof(a);
//printf("earlier %d",c);
t=search(count,n,a);

printf("%d is repeated %d times",count,t);
}
int search(int m,int n,int a[n])
{
  int i,b=0;
//printf("later %d",n);
for(i=0;i<n;i++)
{
    if(a[i]==m)
        b++;

}
return b;
}
program 2
#include<stdio.h>
int occurance(int ,int [],int );
void main()
{
int i,n,count,t=0,a[100],j,c;
printf("enter n");
scanf("%d",&n);
printf("enter elements");
for(i=0;i<n;i++)
scanf("%d",&a[i]);
  for(i=0;i<n;i++)
  {
      c=0;
        for(j=0;j<=i;j++)
      {
          if(a[i]==a[j])
            c++;
      }
      if(c>1)
        continue;
      else
        printf("%d is repeated %d times\n",a[i],occurance(n,a,a[i]));
  }

}
int occurance(int n,int a[100],int k)
{
    int i,j,b=0;

for(i=0;i<n;i++)
{

    if(a[i]==k)
        b++;

}
return b;



}

program 3
#include<stdio.h>
#include<string.h>
int i,j,n=0;
struct student
{
char name[10];
int id;
int marks;
}s[100];
void add(struct student []);
void view(struct student []);

int main (void)
{
//struct student *s[100]=(struct student*)malloc(sizeof(struct student));
int k;
printf("\n enter 1 to add student detailsor enter 2 to view student details");
scanf("%d",&k);
if(k==1)
add(s);
else if(k==2)
    view(s);
else
    printf("\ninvalid option");
return 0;
}

void add(struct student s[100])
{
    int k;
    printf("\n enter no. of students to be added");
    scanf("%d",&k);
    for(i=n;i<n+k;i++)
    {
    printf("\n enter name  ");
    scanf("%s",&s[i].name);
    printf("\n enter id  ");
    scanf("%d",&s[i].id);
    printf("\n enter marks  ");
    scanf("%d",&s[i].marks);
    }
    n=n+k;
    //view(s);
    main();
}
void view(struct student s[100])
{
    printf("\n Name \t ID \t Marks ");
   for(i=0;i<n;i++)
   {
       printf("\n %s\t%d\t%d",s[i].name,s[i].id,s[i].marks);

   }
main();
}

 program 4
#include<stdio.h>
void fun(int n);
void main()
{
int n;
printf("enter n");
scanf("%d",&n);
fun(n);
}
void fun(int n)
{
    int rev=0;
    while(n!=0)
    {

        rev=rev*10+n%10;
        n=n/10;
    }
    printf("reverse numberr is %d\n",rev);
    main();
}
program 5
#include <stdio.h>
int check(char* str,char* sub);
void main()
{
char str[100],sub[100],r[20];
printf("enter string ");
scanf("%s",str);
printf("enter substring ");
scanf("%s",sub);
check(str,sub);
}
int check(char* str,char* sub)
{
  int i, j=0, k;
  for(i=0; str[i]; i++)
  {
    if(str[i] == sub[j])
    {
      for(k=i, j=0; str[k] && sub[j]; j++, k++)
        if(str[k]!=sub[j])
            break;

       if(!sub[j])
        {
        printf("Substring");
        return 0;
        }
    }
  }
  printf("Not a substring");
 return 0;
 main();

}
program 6
#include<stdio.h>

void main()

{

int i=0,j=0,c=0,n,a[100][100];

scanf("%d",&n);

while(j<n)

{

a[i][j]=++c;

j++;

}

--j;

++i;

while(i<n)

{

a[i][j]=++c;

i++;

}

--i;

--j;

while(j>0)

{

a[i][j]=++c;

j--;

}

while(i>0)

{

a[i][j]=++c;

i--;

}

i++;

j++;

while(j<n-1)

{

a[i][j]=++c;

j++;

}

j--;

i++;

a[i][j]=++c;

j--;

a[i][j]=++c;

for(i=0;i<n;i++)

{

for(j=0;j<n;j++)

{

printf("%d ",a[i][j]);

}

printf("\n");

}

}

program 7
#include<stdio.h>
void up_pattern(int n);
void down_pattern(int n);
void upside_pattern(int n);
void main()
{
    int n,k;

    printf("enter which pattern u want 1.up 2.down 3.upside pattern");
    scanf("%d",&k);
    printf("enter n");
    scanf("%d",&n);
    if(k==1)
        up_pattern(n);
        else if(k==2)
            down_pattern(n);
        else
            upside_pattern(n);
}
void up_pattern(int n)
{
    int i,j,space,m;
    space=n;
    for(i=0;i<n;i++)
    {
        for(m=0;m<space;m++)
            printf(" ");
            space--;
            for(j=0;j<2*i+1;j++)
            printf("*");
            printf("\n");
        }

    }
    void down_pattern(int n)
    {
int i,j=0,space=0,m=0,u=0;

    for(i=n;i>0;i--)
    {
space=n-i;
m=space;
while(m>0)
{
    printf(" ");
    m--;
}
for(j=2*i-1;j>0;j--)
{
    printf("*");
}
printf("\n");
    }
    }
void upside_pattern(int n)
{


}
program 8
#include<stdio.h>
void fun(int* arr,int n,int k);
void main()
{
    int i,k;
int arr[100],n;
printf("enter n");
scanf("%d",&n);
for(i=0;i<n;i++)
scanf("%d",&arr[i]);
printf("enter  kth max ");
scanf("%d",&k);
fun(arr,n,k);
printf("%d",arr[k]);
}
void fun(int* arr,int n,int k)
{
int i,j,c,f;
for(i=0;i<n-1;i++)
{
    f=0;
    for(j=0;j<n-1-i;j++)
    {
if(arr[j]>arr[j+1])
{
c=arr[j];
arr[j]=arr[j+1];
arr[j+1]=c;
f=1;
}
}
if(f==0)
    break;
}

}
program 9
#include<stdio.h>
void num_table(int n);
void main()
{
    int n;
    printf("enter n ");
    scanf("%d",&n);
    num_table(n);

}
void num_table(int n)
{
    int i;
    for(i=1;i<=10;i++)
        printf("%d * %d = %d \n",n,i,n*i);

}

 



 

